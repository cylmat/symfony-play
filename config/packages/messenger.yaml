
# You're ready to use the Messenger component. You can define your own message buses
#     or start using the default one right now by injecting the message_bus service
#     or type-hinting Symfony\Component\Messenger\MessageBusInterface in your code.

#   * To send messages to a transport and handle them asynchronously:

#     1. Update the MESSENGER_TRANSPORT_DSN env var in .env if needed
#        and framework.messenger.transports.async in config/packages/messenger.yaml;
#     2. (if using Doctrine) Generate a Doctrine migration bin/console doctrine:migration:diff
#        and execute it bin/console doctrine:migration:migrate
#     3. Route your message classes to the async transport in config/packages/messenger.yaml.

#   * Read the documentation at https://symfony.com/doc/current/messenger.html


framework:
    messenger:
        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
        # failure_transport: failed

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            # async: '%env(MESSENGER_TRANSPORT_DSN)%'
            # failed: 'doctrine://default?queue_name=failed'
            # sync: 'sync://'

        routing:
            # Route your messages to the transports
            # 'App\Message\YourMessage': async

# when@test:
#    framework:
#        messenger:
#            transports:
#                # replace with your transport name here (e.g., my_transport: 'in-memory://')
#                # For more Messenger testing tools, see https://github.com/zenstruck/messenger-test
#                async: 'in-memory://'

app:
    enabled: false # sample

parameters:

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name

    # BUNDLE #
    App\AppBundle\:
        resource: ../../src/AppBundle/
        exclude: 
            - ../../src/AppBundle/Domain/Message/LogMessage.php
            - ../../src/AppBundle/Infrastructure/Dbal/ConnectionWrapper.php

    #################
    # DDD Interface #
    #################
    App\AppBundle\Application\OutputInterface: '@App\AppBundle\Infrastructure\Service\Output\Output'
    App\AppBundle\Domain\CacheInterface: '@App\AppBundle\Infrastructure\Manager\AppCacheManager'
    App\AppBundle\Domain\MessageBusInterface: '@App\AppBundle\Infrastructure\Service\MessageBus'
    App\AppBundle\Domain\Service\LoggerInterface: '@App\AppBundle\Infrastructure\Service\Logger'

    app.logger: '@App\AppBundle\Domain\Service\LoggerInterface'

    ################
    # APP REGISTRY #
    ################
    # @todo: Remove this and use fake Doctrine for tests
    App\AppBundle\Infrastructure\Manager\AppEntityRegistry:
        arguments: 
            $persistanceEntityRegistry: !tagged_iterator app.entity_manager
        # decorates: Doctrine\Common\Persistence\ManagerRegistry
        # NOT NEEDED arguments: ['@.inner'] # Automatic with default service.yaml

    App\AppBundle\Infrastructure\Manager\AppRepositoryRegistry:
        arguments:
            $repositories: !tagged_iterator app.repository

    ##########
    # OUTPUT #
    ##########
    App\AppBundle\Infrastructure\Service\Output\JsonApiValidator: ~
    App\AppBundle\Infrastructure\Service\Output\ValidatorInterface: '@App\AppBundle\Infrastructure\Service\Output\JsonApiValidator'

    App\AppBundle\Infrastructure\Service\Output\JsonApiFormatter: ~
    App\AppBundle\Infrastructure\Service\Output\FormatterInterface: '@App\AppBundle\Infrastructure\Service\Output\JsonApiFormatter'

    ###########
    # COMMAND #
    ###########
    App\AppBundle\Command\MakeEntityWrapper:
        arguments:
            - '@maker.maker.make_entity'

    ###########
    # Message #
    ###########
    App\AppBundle\Infrastructure\MessageHandler\MessageHandler:
        arguments: 
            $logger: '@app.logger'

    ###########
    # SESSION #
    ###########
    # https://symfony.com/doc/current/session.html#store-sessions-in-a-relational-database-mariadb-mysql-postgresql
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'
            - { db_table: 'sessions' }
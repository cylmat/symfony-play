app:
  enabled: false # sample
  #redis:
  #  enabled: ~

parameters:
    # @TODO use "app.redis.enabled" parameters
    use_redis: ~ # use null/local/remote : default null

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name

    App\AppBundle\:
        resource: ../../src/AppBundle/

    # @todo: Remove this and use fake Doctrine for tests 
    App\AppBundle\Infrastructure\AppDoctrine:
        arguments: ['@doctrine', '%env(resolve:APP_ENV)%']

    App\AppBundle\Command\MakeEntityWrapper:
        arguments: 
            - '@maker.maker.make_entity'

    App\AppBundle\Infrastructure\RedisClientFactory:
        arguments:
            # env function come from ExpressionLanguageProvider.php
            # @todo: use custom expression "isset"
            $redisUrl: "@=
                parameter('use_redis') === 'local' && env('REDIS_URL')
                    ? env('REDIS_URL')
                    : (
                        parameter('use_redis') === 'remote' && env('REDIS_REMOTE_URL')
                        ? env('REDIS_REMOTE_URL')
                        : null
                    )"
    
#!/usr/bin/env bash

if [ $# -lt 1 ]; then
    echo "Usage : $0 <script-name>"
    exit
fi

case "$1" in

###########
# TESTING #
###########

"tests"|"all-tests")
	$0 cover &&
	$0 deptrac &&
	$0 infection &&
	$0 pest && # Run like paratest or phpunit
	echo -e "\033[1;32m------------\n- All good -\n------------ \033[0m"
;;

# @see https://phpunitgen.io
"test-gen")
    bin/phpunitgen --config=tools/test/phpunitgen.yml src ;;

# Specifics

"cover")
	echo -e "\033[1;33mYou must install pcov, phpdbg or xdebug to use code coverage \033[0m\n"
	php -dpcov.enabled=1 bin/phpunit -c tools/test/phpunit.xml --coverage-text tests
    # XDEBUG_MODE=coverage bin/phpunit -c tools/test/phpunit.xml --coverage-html=var/unit-coverage
    # phpdbg -qrr bin/phpunit -c phpunit.xml --coverage-html var/unit-coverage
;;

# @see https://qossmic.github.io/deptrac
"deptrac")
	bin/deptrac analyse --config-file=tools/test/deptrac.yaml ;;

# @see https://infection.github.io
# -derror_reporting=24575 remove deprecated
"infection")
	test -d /tmp/infection || mkdir /tmp/infection
	test -f /tmp/infection/index.xml || touch /tmp/infection/index.xml
	echo -e "\033[1;33mYou must install pcov, phpdbg or xdebug to use infection \033[0m"
	php -derror_reporting=24575 bin/infection run -c tools/test/infection.json --debug --show-mutations
;;

# @see https://github.com/paratestphp/paratest
"paratest")
    bin/paratest -c tools/test/phpunit.xml ;;

# @see https://pestphp.com
"pest")
    bin/pest -c tools/test/phpunit.xml ;;

# @see https://phpunit.readthedocs.io
"phpunit")
    bin/phpunit -c tools/test/phpunit.xml ;;
"unit")
    $0 phpunit ;;

*) echo "Command \"$1\" not found!" ;;

esac